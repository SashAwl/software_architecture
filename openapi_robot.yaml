openapi: 3.0.0
info:
  title: Приложение для робота-пылесоса
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1/
    description: Dev server
paths:
  /robots:
    get:
      summary: "Метод получения списка подключенных устройств"
      tags: 
        - Robots
      operationId: getAllRobots
      responses:
        "200": 
          description: "Успешный ответ со списком подключенных устройств"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Robot"
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Метод добавления нового устройства"
      tags:
        - Robots
      operationId: addRobot
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: "#/components/schemas/Robot"
      responses:
        "200":
          description: "Успешный ответ с одним добавленным устройством"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Robot"
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robots{robot_name}:
    get:
      summary: "Метод получения информации об одном роботе по его имени"
      tags: 
        - Robots
      operationId: getRobotByName
      parameters: 
        - name: robot_name
          in: path
          required: true
          description: Имя робота
          schema:
            type: string
      responses:
        "200": 
          description: "Успешный ответ с одним роботом"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Robot"
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: "Метод удаления устройства по его имени"
      tags:
        - Robots
      operationId: deleteRobotByName
      parameters: 
        - name: robot_name
          in: path
          required: true
          description: "Имя робота"
          schema:
            type: string
      responses:
        "200": 
          description: "Успешно удалено"
          content:
            application/json: {}
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    post:
      summary: "Метод создания пользователя"
      tags:
        - Users
      operationId: createClient
      requestBody: 
        required: true
        content:
          adplication/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200": 
          description: "Успешный ответ c одним пользователем"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users{user_id}:
    get:
      summary: "Метод получения информации о пользователе по его id"
      tags: 
        - Users
      operationId: getUserById
      parameters: 
        - name: user_id
          in: path
          required: true
          description: Имя пользователя
          schema:
            type: string
      responses:
        "200": 
          description: "Успешный ответ с одним пользователем"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: "Метод удаления пользователя по его id"
      tags:
        - Users
      operationId: deleteUserById
      parameters: 
        - name: user_id
          in: path
          required: true
          description: "Имя пользователя"
          schema:
            type: string
      responses:
        "200": 
          description: "Успешно удалено"
          content:
            application/json: {}
        "default": 
          description: "Ответ в остальных случаях"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Robot:
      type: object
      required:
        - ID_robot
        - Name_machine
        - Model
        - Version
        - Capacity_battery
        - IP-adress
        - User_id
      properties:
        ID_robot:
          type: integer
          example: 382292
        Name_machine:
          type: string
          example: "Benedikt"
          description: Имя, присвоенное роботу
        Model:
          type: string
          example: "Garlyn"
          description: Название модели робота
        Version:
          type: integer
          example: 6.1.2
          description: Версия ПО
        Capacity_battery:
          type: integer
          example: 1900
          description: Емкость батареи
        IP-adress:
          type: integer
          example: 102.42.123.23
        User_id:
          type: integer
          example: 382292
    Robots:
      type: array
      items: 
        $ref: "#/components/schemas/Robot"
    Error:
      type: object
      required: 
        - code_error
        - message_error
      properties:
        code_error:
          type: integer
        message_error:
          type: string
    User:
      type: object
      required:
        - ID_user
        - Name_user
        - Hash_authorization
        - Control_data
      properties:
        ID_user:
          type: integer
          example: 382292
        Name_user:
          type: string
          example: "Федор"
          description: Имя пользователя
        Hash_authorization:
          type: string
          example: "n3nnjrs8394uhwn93jkjsdi3"
          description: Сгенерированный хеш
        Control_data:
          type: string
          example: 6.1.2
          description: Данные для восстановления пароля
    Users:
      type: array
      items: 
        $ref: "#/components/schemas/User"